@namespace BsBlazor.Plus
@using BlazorDevKit
@using BsBlazor.Helpers
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Components.Forms
@using System.Globalization
@typeparam TValue
@inherits BspInputFieldBase<TValue>
<BspField Context="field" 
          Id="@Id"
          Label="@Label"
          Class="@Class" 
          Style="@Style"
          AdditionalAttributes="AdditionalAttributes"
          ShowLabel="ShowLabel" ValueExpression="ValueExpression">
    <InputDate @ref="_input"
               Value="@Value"
               ValueChanged="ValueChanged"
               ValueExpression="ValueExpression!"
               class="@field.GetValidatableControlClass(InputCss)"
               disabled="@Disabled"
               readonly="@ReadOnly"
               required="@Required"
               autofocus="@AutoFocus"
               max="9999-12-31"
               id="@field.Id" placeholder="@Placeholder" />
</BspField>
@code {
    private InputDate<TValue?> _input = default!;
    private string InputCss => CssBuilder.Default("form-control")
         .AddClass("form-control-sm", Size == BsFormControlSize.Small)
         .AddClass("form-control-lg", Size == BsFormControlSize.Large)
         .Build();
    public override ValueTask FocusAsync() => _input.Element!.Value.FocusAsync();
}
