@namespace BsBlazor
@inherits BsComponentWithContentBase
@implements IBsModalDialogParameters
<div class="@CssClass" style="@Style" @attributes="AdditionalAttributes">
   @ChildContent
</div>
@code {
    private Dictionary<string, object> _additionalAttributes = [];

    private string CssClass => CssBuilder.Default("modal-dialog")
                                        .AddClass("modal-sm", Size == BsModalSize.Small)
                                        .AddClass("modal-lg", Size == BsModalSize.Large)
                                        .AddClass("modal-xl", Size == BsModalSize.ExtraLarge)
                                        .AddClass("modal-fullscreen", Fullscreen == BsModalFullscreen.Always)
                                        .AddClass("modal-fullscreen-sm-down", Fullscreen == BsModalFullscreen.BelowSmall)
                                        .AddClass("modal-fullscreen-md-down", Fullscreen == BsModalFullscreen.BelowMedium)
                                        .AddClass("modal-fullscreen-lg-down", Fullscreen == BsModalFullscreen.BelowLarge)
                                        .AddClass("modal-fullscreen-xl-down", Fullscreen == BsModalFullscreen.BelowExtraLarge)
                                        .AddClass("modal-fullscreen-xxl-down", Fullscreen == BsModalFullscreen.BelowExtraExtraLarge)
                                        .AddClass("modal-dialog-centered", Centered)
                                        .AddClass("modal-dialog-scrollable", Scrollable)
                                        .AddClass(Class)
                                        .Build();

    [Parameter]
    public bool Scrollable { get; set; } = false;

    [Parameter]
    public bool Centered { get; set; } = false;

    [Parameter]
    public BsModalSize Size { get; set; } = BsModalSize.Default;

    [Parameter]
    public BsModalFullscreen Fullscreen { get; set; } = BsModalFullscreen.Never;

    protected override void OnParametersSet()
    {
        _additionalAttributes = new Dictionary<string, object>(AdditionalAttributes.ToList());
    }
}