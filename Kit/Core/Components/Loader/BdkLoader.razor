@namespace BlazorDevKit

@typeparam T

@switch (_state)
{
    case BdkLoaderState.Loading:
        @if (LoadingContent is not null)
        {
            @LoadingContent
        }
        else if (BdkLoaderOptions.Loading.HasComponentTypeContent)
        {
            @BdkLoaderOptions.Loading.BuildComponentTypeContent(Message)
        }
        else if (BdkLoaderOptions.Loading.HasMarkupStringContent)
        {
            @BdkLoaderOptions.Loading.GetMarkupStringContent()
        }
        else if (BdkLoaderOptions.Loading.HasRenderFragmentContent)
        {
            @BdkLoaderOptions.Loading.GetRenderFragmentContent()(Message)
        }
        else
        {
            <div class="bdk-loader-container">
                <div>
                    <svg xmlns="http://www.w3.org/2000/svg" width="3em" height="3em" viewBox="0 0 24 24">
                        <path fill="currentColor" d="M10.14,1.16a11,11,0,0,0-9,8.92A1.59,1.59,0,0,0,2.46,12,1.52,1.52,0,0,0,4.11,10.7a8,8,0,0,1,6.66-6.61A1.42,1.42,0,0,0,12,2.69h0A1.57,1.57,0,0,0,10.14,1.16Z">
                            <animateTransform attributeName="transform" dur="0.75s" repeatCount="indefinite" type="rotate" values="0 12 12;360 12 12" />
                        </path>
                    </svg>
                </div>
                <div class="bdk-loader-message">@Message</div>
            </div>
        }
        break;
    case BdkLoaderState.Loaded:
        @ChildContent(_value!)
        break;
    case BdkLoaderState.Error:
        @if (ErrorContent is not null)
        {
            @ErrorContent(_lastErrorResult)
        }
        else if (BdkLoaderOptions.Error.HasComponentTypeContent(_lastErrorResult.GetExceptionType()))
        {
            @BdkLoaderOptions.Error.BuildComponentTypeContent(_lastErrorResult)
        }
        else if (BdkLoaderOptions.Error.HasRenderFragmentContent(_lastErrorResult.GetExceptionType()))
        {
            @BdkLoaderOptions.Error.GetRenderFragmentContent(_lastErrorResult.GetExceptionType())(_lastErrorResult)
        }
        else if (BdkLoaderOptions.Error.HasComponentTypeGenericContent)
        {
            @BdkLoaderOptions.Error.BuildComponentTypeGenericContent(_lastErrorResult)
        }
        else if (BdkLoaderOptions.Error.HasRenderFragmentGenericContent)
        {
            @BdkLoaderOptions.Error.GetRenderFragmentGenericContent()(_lastErrorResult)
        }
        else
        {
            <div class="bdk-loader-container">
                
                <div class="bdk-loader-message">
                    @_lastErrorResult.Exception.Message
                </div>

                @if (CanRetry)
                {
                    <button class="bdk-loader-button" @onclick="ReloadAsync">
                        @CanRetryTitle
                    </button>
                }
                
            </div>
        }
        break;
    default: <div></div> break;
}
